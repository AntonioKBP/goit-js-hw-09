{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAQb,IAAIQ,EACAC,EACAC,EALYC,SAASC,cAAc,SAE/BC,iBAAiB,UAKzB,SAAuBC,GACrBA,EAAIC,iBAEJP,EAAaQ,OAAOF,EAAIG,cAAcC,SAASlB,MAAMmB,OACrDV,EAAYO,OAAOF,EAAIG,cAAcC,SAASE,KAAKD,OACnDT,EAAcM,OAAOF,EAAIG,cAAcC,SAASG,OAAOF,OAEvD,IAAK,IAAIG,EAAI,EAAGA,GAAKZ,EAAaY,GAAK,EACrCxB,EAAcwB,EAAGd,GACde,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAGnDQ,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmitClick);\nlet delayValue;\nlet stepValue;\nlet amountValue;\n\nfunction onSubmitClick(evt) {\n  evt.preventDefault();\n\n  delayValue = Number(evt.currentTarget.elements.delay.value);\n  stepValue = Number(evt.currentTarget.elements.step.value);\n  amountValue = Number(evt.currentTarget.elements.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$delayValue","$47d4ff9957288465$var$stepValue","$47d4ff9957288465$var$amountValue","document","querySelector","addEventListener","evt","preventDefault","Number","currentTarget","elements","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.33c0cfcc.js.map"}